# TODO review and adjust
version: '3'
services:
  rxsmview:
    image: nginx:1.15.7-alpine
    ports:
      - ${RX_SM_WEB_PORT}:80
    volumes:
      - ./build/es6-bundled:/usr/share/nginx/html
    restart: always
    networks:
      - net1 # network between the frontend and api

  rxsmapi:
    image: node:10.15-alpine
    ports:
      - ${RX_SM_API_PORT}:8080
    volumes:
      - ./api:/app
    restart: always
    networks:
      - net1 # network between the frontend and api
      - net2 # internal network between the backend services ( api and db )

  rxsmdb:
    image: mongo:4.0.6-xenial
    volumes:
      - ./db:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - net2 # internal network between the backend services ( api and db )
      - net3 # internal network between the backend services (db and db-gui)

  rxsmdbgui:
    image: mongo-express:0.49.0
    ports:
      - ${RX_SM_DB_GUI_PORT}:8081
    restart: always
    depends_on:
      - rxsmdb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
    networks:
      - net3 # internal network between the backend services ( db and db-gui )

  # TODO consider adding the mockserver and preparing it with simulated responses ( to avoid depending on the actual windows rasterex api server)
  # mockServer:
  #   image: jamesdbloom/mockserver:mockserver-5.5.1
  #   ports:
  #     - ${RX_MOCK_SERVER_PORT1}:1080
  #     - ${RX_MOCK_SERVER_PORT2}:1090
  #   environment:
  #     - LOG_LEVEL=WARN
  #   command: ["/opt/mockserver/run_mockserver.sh", "-logLevel", "INFO", "-serverPort", "1080","-jvmOptions", "-Dmockserver.enableCORSForAllResponses=true"]

networks:
  net1:
  net2:
  net3:

